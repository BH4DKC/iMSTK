# Include and library paths
set(CMAKE_INCLUDE_PATH "@CMAKE_INCLUDE_PATH@")
set(CMAKE_LIBRARY_PATH "@CMAKE_LIBRARY_PATH@")

# Path to SimMedTK source directory
set(SimMedTK_SOURCE_DIR "@CMAKE_CURRENT_SOURCE_DIR@")

# Path to modules directory
set(SimMedTK_MODULE_PATH ${SimMedTK_SOURCE_DIR}/CMake)

#-----------------------------------------------------------------------------
# Update CMake module path
#
list(INSERT CMAKE_MODULE_PATH 0 "${SimMedTK_MODULE_PATH}")

## SimMedTK settings
set(USE_OCULUS @SimMedTK_USE_OCULUS@)
set(USE_PHANTOM_OMNI @SimMedTK_USE_PHANTOM_OMNI@)
set(USE_ADU @SimMedTK_USE_ADU@)
set(USE_NIUSB6008 @SimMedTK_USE_NIUSB6008@)

set(VegaFEM_DIR @VegaFEM_DIR@)

## Collect external libs includes and settings
set(SimMedTK_INCLUDE_DIRS
)

find_package(PThreads REQUIRED)
find_package(OpenGL REQUIRED)
find_package(GLEW REQUIRED)
find_package(SFML REQUIRED)
find_package(GLM REQUIRED)
find_package(Assimp REQUIRED)
find_package(Eigen3 REQUIRED)
find_package(VegaFEM REQUIRED)
find_package(ThreadPool REQUIRED)
if(USE_OCULUS)
  find_package(Oculus REQUIRED)
  include_directories(SYSTEM "${Oculus_INCLUDE_DIRS}")
  list(APPEND SimMedTK_INCLUDE_DIRS "${Oculus_INCLUDE_DIRS}")
  if(NOT WIN32)
    find_package(X11 REQUIRED)
  endif()
endif()

include(SimMedTKMacros)

simmedtk_find_package(GLUT REQUIRED)

if(USE_PHANTOM_OMNI)
  simmedtk_find_package(OpenHaptics)
endif()

if(USE_ADU)
  simmedtk_find_package(ADU REQUIRED)
  list(APPEND SimMedTK_INCLUDE_DIRS "${ADU_INCLUDE_DIR}")
endif()

if(USE_NIUSB6008)
  simmedtk_find_package(NIDAQ REQUIRED)
  list(APPEND SimMedTK_INCLUDE_DIRS "${NIDAQ_INCLUDE_DIR}")
endif()

list(APPEND SimMedTK_INCLUDE_DIRS
    "${ThreadPool_INCLUDE_DIR}"
    "${EIGEN3_INCLUDE_DIR}"
    "${GLM_INCLUDE_DIR}"
    "${SFML_INCLUDE_DIRS}")

include_directories("${SimMedTK_INCLUDE_DIRS}")

link_directories(@CMAKE_LIBRARY_PATH@)

# Path to target files
include("@CMAKE_CURRENT_BINARY_DIR@/SimMedTKTargets.cmake")
