###########################################################################
#
# Copyright (c) Kitware, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0.txt
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
###########################################################################

# Include and library paths
set(CMAKE_INCLUDE_PATH "@CMAKE_INCLUDE_PATH@")
set(CMAKE_LIBRARY_PATH "@CMAKE_LIBRARY_PATH@")

# Path to iMSTK source directory
set(iMSTK_SOURCE_DIR "@CMAKE_CURRENT_SOURCE_DIR@")

# Path to modules directory
set(iMSTK_MODULE_PATH ${iMSTK_SOURCE_DIR}/CMake)

#-----------------------------------------------------------------------------
# Update CMake module path
#
list(INSERT CMAKE_MODULE_PATH 0 "${iMSTK_MODULE_PATH}")

## iMSTK settings
set(USE_OCULUS @iMSTK_USE_OCULUS@)
set(USE_PHANTOM_OMNI @iMSTK_USE_PHANTOM_OMNI@)
set(USE_ADU @iMSTK_USE_ADU@)
set(USE_NIUSB6008 @iMSTK_USE_NIUSB6008@)
set(USE_VRPN_CLIENT @USE_VRPN_CLIENT@)
set(USE_VRPN_SERVER @USE_VRPN_SERVER@)

set(VegaFEM_DIR @VegaFEM_DIR@)
set(VTK_DIR @VTK_DIR@)
set(ThreadPool_DIR @ThreadPool_DIR@)

## Collect external libs includes and settings
set(iMSTK_INCLUDE_DIRS
  ${iMSTK_SOURCE_DIR}
)

find_package(PThreads REQUIRED)
find_package(OpenGL REQUIRED)
find_package(SFML REQUIRED)
find_package(Assimp REQUIRED)
find_package(Eigen3 REQUIRED)
find_package(VegaFEM REQUIRED)
find_package(ThreadPool REQUIRED)
find_package(VRPN REQUIRED)
find_package(VTK REQUIRED)
include(${VTK_USE_FILE})

if(USE_OCULUS)
  find_package(Oculus REQUIRED)
  include_directories(SYSTEM "${Oculus_INCLUDE_DIRS}")
  list(APPEND iMSTK_INCLUDE_DIRS "${Oculus_INCLUDE_DIRS}")
  if(NOT WIN32)
    find_package(X11 REQUIRED)
  endif()
endif()

include(iMSTKMacros)

if(USE_PHANTOM_OMNI)
  imstk_find_package(OpenHaptics)
endif()

if(USE_ADU)
  imstk_find_package(ADU REQUIRED)
  list(APPEND iMSTK_INCLUDE_DIRS "${ADU_INCLUDE_DIR}")
endif()

if(USE_NIUSB6008)
  imstk_find_package(NIDAQ REQUIRED)
  list(APPEND iMSTK_INCLUDE_DIRS "${NIDAQ_INCLUDE_DIR}")
endif()

if(USE_VRPN_CLIENT)
  set(components quat)
  if(USE_VRPN_SERVER)
    list(APPEND components vrpnserver Libusb1)
  endif()
  if(iMSTK_USE_PHANTOM_OMNI)
    list(APPEND components vrpn_phantom)
  endif()
  if(iMSTK_USE_FALCON)
    list(APPEND components LibNifalcon)
  endif()
  find_package(VRPN REQUIRED COMPONENTS ${components})
  list(APPEND iMSTK_INCLUDE_DIRS "${VRPN_INCLUDE_DIR}")
endif()

list(APPEND iMSTK_INCLUDE_DIRS
    "${ThreadPool_INCLUDE_DIR}"
    "${EIGEN3_INCLUDE_DIR}"
    "${SFML_INCLUDE_DIRS}"
    "${ThreadPool_INCLUDE_DIR}")

include_directories("${iMSTK_INCLUDE_DIRS}")

link_directories(@CMAKE_LIBRARY_PATH@)

# Path to target files
include("@CMAKE_CURRENT_BINARY_DIR@/iMSTKTargets.cmake")
